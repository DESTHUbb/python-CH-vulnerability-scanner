import socket
import sys
import time
def domain2ip(domain_file):
    domains = open(domain_file,'r').readlines()
    for domain in domains:
        domain = domain.strip()
        try:
            ip = socket.gethostbyname(domain)
        except:
            ip = '127.0.0.1'
        print(ip,domain)

if __name__ == '__main__':
    domain2ip(sys.argv[1])

    
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

# IMPROVED CODE:

import socket
import sys
import time

def get_domain_ip(domain):
       try:
            ip = socket.gethosbyname(domain)
         except socket.gaierror:
            ip = '127.0.0.1'
         return ip 
   def domain2ip(domain_file):
        try:
             with open(domain_file, 'r') as f:
                 domains = f.readlines()
        except PermissionError:
             return
    except PermissionError:
            print(f"Error: Permission denied to read file {domain_file}")
            
            return
    for domain in domains:
          domain = domain.strip()
        if not domain:
                 continue
        ip = get_domain_ip(domain)
        print(f"{ip} {domain}")
        time.sleep(0.5)
        
if __name__ == '__main__':
    if len(sys.argv) != 2:
        print("Usage: python domain2ip.py <domain_file>")
         sys.exit()
    domain_file = sys.argv[1]
    domain2ip(domain_file)
    
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
# This version handles the socket.gaierror exception that is thrown when the IP address of a domain cannot be found. 

